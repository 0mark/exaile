This is for notes and plans regarding exaile 0.3. 
It should also be used to keep track of what each developer is
currently working on.

Current projects:
    Aren Olson - Playlist Importing
    Adam Olsen - Tests (doctests or other)

*** QUICK NOTE:  We need to make a way that coders can easily see what object
export which signals, and possibly have a way for this to show up in epydoc

Implemented:
    Collection
    Libraries
        now has realtime watching!
    Playlists
    Player
    Queue
    Settings
    Event
        signals-like system
    XDG
        exaile's config and data files now stored according to xdg spec
    Logging System
    Smart Playlists
    CD Playback
    Track Syncronization
        very prelimiary, will need careful watching
    Device Manager
        only for cd right now
    HAL Support
        only for cd right now
    Playlists Manager

Things that can probably be implemented at this stage:
    Playlist Importing
        stubs in playlist.py
    Alternate Playback Systems
        will need more abstraction in player.py, but is feasable
        stub for generic Player class exists
    CD Burning
        class in cd.py, takes a Playlist and burns it in order
    CD Ripping
        class in cd.py, rips a CDPlaylist or any track with a cdda loc
    Content-Matching (involved)
        matching tracks based on tag content rather than loc.
        useful for: detecting moves withing the library, xspf playlists
        ?match by everything or a subset? if x% is the same? efficiency?

Other Work-Items:
    Gapless Playback
        doable? difficulty?
        cross-fade too?
    Podcasts
    Dynamic Playlists
        I have some fun ideas for this one, best to wait --Aren
    MP3 Player Support (very involved, should wait for a while)
        generic classes subclassable for iPod, MTP and MassStorage players
        create a special Collection for each, load Playlists, etc.
        also should handle transfer, nto necessariliy at first
            transcode on transfer also good
                auto-detect supported formats (allow choosing too)
                transcode only if
                    not in specified format
                    above certain bitrate/filesize?
            algorithms to handle sync?
            allow custom file layout if applicable
        podcast support
            limit number / autodelete old ?
    Plugins Systems (wait on GUI)
        make exz default format
        port old plugins
    Last.fm
        implement as plugin
    GUI
        this is a big one, should come very late
    Lyrics
        wait on GUI
        pluggable backends
        support embedded lyics
    Covers
        wait on GUI
        pluggable backends
        support embedded covers
        cover from filename via tag info (eg. %artist-%album.jpg)
    DBUS
    Kill xl/path.py
        relevant code should be merged into xdg.py

==== NOTES ====
xl is to be split into xl and xlgui. All code concerning the display of 
data and receipt of user input through the gui should go into xlgui. code 
that is not dependent upon the gui implementation should go in xl.


=== Contributors ===
list other contributors to 0.3 here so they may be given due credit

AlphaCluster - playlist export for m3u/pls/asx/xspf
